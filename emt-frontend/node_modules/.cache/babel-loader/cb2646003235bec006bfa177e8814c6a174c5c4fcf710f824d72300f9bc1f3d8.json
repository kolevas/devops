{"ast":null,"code":"import axiosInstance from \"../axios/axios.js\";\nconst userRepository = {\n  login: async (username, password) => {\n    try {\n      const response = await axiosInstance.post(\"/users/login\", {\n        username,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  },\n  register: async (username, password, email) => {\n    try {\n      const response = await axiosInstance.post(\"/users/register\", {\n        username,\n        password,\n        email\n      });\n      console.log(\"Registration successful:\", response.data);\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n    }\n  },\n  logout: () => {\n    localStorage.removeItem(\"jwtToken\");\n    console.log(\"User logged out\");\n  }\n};\nexport default userRepository;","map":{"version":3,"names":["axiosInstance","userRepository","login","username","password","response","post","token","data","localStorage","setItem","error","console","register","email","log","logout","removeItem"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/repository/userRepository.js"],"sourcesContent":["import axiosInstance from \"../axios/axios.js\";\n\nconst userRepository = {\n    login: async (username, password) => {\n        try {\n            const response = await axiosInstance.post(\"/users/login\", {\n                username,\n                password,\n            });\n\n            const { token } = response.data;\n            localStorage.setItem(\"jwtToken\", token);\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n        }\n    },\n\n    register: async (username, password, email) => {\n        try {\n            const response = await axiosInstance.post(\"/users/register\", {\n                username,\n                password,\n                email,\n            });\n\n            console.log(\"Registration successful:\", response.data);\n        } catch (error) {\n            console.error(\"Registration failed:\", error);\n        }\n    },\n\n    logout: () => {\n        localStorage.removeItem(\"jwtToken\");\n        console.log(\"User logged out\");\n    },\n};\n\nexport default userRepository;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,mBAAmB;AAE7C,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,cAAc,EAAE;QACtDH,QAAQ;QACRC;MACJ,CAAC,CAAC;MAEF,MAAM;QAAEG;MAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAC/BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,KAAK,CAAC;IAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC;EACJ,CAAC;EAEDE,QAAQ,EAAE,MAAAA,CAAOV,QAAQ,EAAEC,QAAQ,EAAEU,KAAK,KAAK;IAC3C,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAML,aAAa,CAACM,IAAI,CAAC,iBAAiB,EAAE;QACzDH,QAAQ;QACRC,QAAQ;QACRU;MACJ,CAAC,CAAC;MAEFF,OAAO,CAACG,GAAG,CAAC,0BAA0B,EAAEV,QAAQ,CAACG,IAAI,CAAC;IAC1D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAEDK,MAAM,EAAEA,CAAA,KAAM;IACVP,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;IACnCL,OAAO,CAACG,GAAG,CAAC,iBAAiB,CAAC;EAClC;AACJ,CAAC;AAED,eAAed,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}