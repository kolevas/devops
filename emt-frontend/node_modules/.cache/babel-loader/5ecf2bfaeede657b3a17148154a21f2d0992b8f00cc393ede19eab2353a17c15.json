{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport booksRepository from \"../repository/booksRepository\";\nconst initialState = {\n  \"books\": [],\n  \"loading\": true\n};\nconst useBooks = () => {\n  _s();\n  const [state, setState] = useState(initialState);\n  const fetchBooks = useCallback(() => {\n    booksRepository.findAll().then(response => {\n      response.data.forEach(book => {\n        if (book.author == null) {\n          book.author = 2;\n        }\n      });\n      setState({\n        \"books\": response.data,\n        \"loading\": false\n      });\n    }).catch(error => console.log(error));\n  }, []);\n  const onDelete = useCallback(id => {\n    booksRepository.delete(id).then(() => {\n      console.log(`Successfully deleted the book with ID ${id}.`);\n      fetchBooks();\n    }).catch(error => console.log(error));\n  }, [fetchBooks]);\n  useEffect(() => {\n    fetchBooks();\n  }, [fetchBooks]);\n\n  // return {...state, onAdd: onAdd, onEdit: onEdit, onDelete: onDelete}\n  return {\n    ...state,\n    onDelete: onDelete\n  };\n};\n_s(useBooks, \"C3WQUXDnMKQJShzPEEqhSOreMMY=\");\nexport default useBooks;","map":{"version":3,"names":["useCallback","useEffect","useState","booksRepository","initialState","useBooks","_s","state","setState","fetchBooks","findAll","then","response","data","forEach","book","author","catch","error","console","log","onDelete","id","delete"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/hooks/useBooks.js"],"sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport booksRepository from \"../repository/booksRepository\";\n\nconst initialState = {\n    \"books\": [],\n    \"loading\": true,\n};\n\nconst useBooks = () => {\n    const [state, setState] = useState(initialState);\n\n    const fetchBooks = useCallback(() => {\n        booksRepository\n            .findAll()\n            .then((response) => {\n                response.data.forEach(book=>{\n                    if (book.author == null){\n                        book.author=2\n                    }\n                })\n                setState({\n                    \"books\": response.data,\n                    \"loading\": false,\n                });\n            })\n            .catch((error) => console.log(error));\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        booksRepository\n            .delete(id)\n            .then(() => {\n                console.log(`Successfully deleted the book with ID ${id}.`);\n                fetchBooks();\n            })\n            .catch((error) => console.log(error));\n    }, [fetchBooks]);\n\n    useEffect(() => {\n        fetchBooks();\n    }, [fetchBooks]);\n\n    // return {...state, onAdd: onAdd, onEdit: onEdit, onDelete: onDelete}\n    return {...state, onDelete: onDelete}\n};\n\nexport default useBooks"],"mappings":";AAAA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACtD,OAAOC,eAAe,MAAM,+BAA+B;AAE3D,MAAMC,YAAY,GAAG;EACjB,OAAO,EAAE,EAAE;EACX,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACE,YAAY,CAAC;EAEhD,MAAMK,UAAU,GAAGT,WAAW,CAAC,MAAM;IACjCG,eAAe,CACVO,OAAO,CAAC,CAAC,CACTC,IAAI,CAAEC,QAAQ,IAAK;MAChBA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,IAAI,IAAE;QACxB,IAAIA,IAAI,CAACC,MAAM,IAAI,IAAI,EAAC;UACpBD,IAAI,CAACC,MAAM,GAAC,CAAC;QACjB;MACJ,CAAC,CAAC;MACFR,QAAQ,CAAC;QACL,OAAO,EAAEI,QAAQ,CAACC,IAAI;QACtB,SAAS,EAAE;MACf,CAAC,CAAC;IACN,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,QAAQ,GAAGrB,WAAW,CAAEsB,EAAE,IAAK;IACjCnB,eAAe,CACVoB,MAAM,CAACD,EAAE,CAAC,CACVX,IAAI,CAAC,MAAM;MACRQ,OAAO,CAACC,GAAG,CAAC,yCAAyCE,EAAE,GAAG,CAAC;MAC3Db,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhBR,SAAS,CAAC,MAAM;IACZQ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,OAAO;IAAC,GAAGF,KAAK;IAAEc,QAAQ,EAAEA;EAAQ,CAAC;AACzC,CAAC;AAACf,EAAA,CApCID,QAAQ;AAsCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}