{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport userRepository from \"../repository/userRepository\";\nimport { useNavigate } from \"react-router-dom\";\nconst useUsers = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const navigate = useNavigate();\n  const checkAuth = useCallback(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (!token) {\n      setLoggedInUser(null);\n      return;\n    }\n    try {\n      const user = JSON.parse(atob(token.split(\".\")[1]));\n      setLoggedInUser(user);\n    } catch {\n      // Invalid token format\n      setLoggedInUser(null);\n    }\n  }, []);\n  useEffect(() => {\n    checkAuth();\n    const handleStorageChange = event => {\n      if (event.key === \"jwtToken\") {\n        checkAuth();\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, [checkAuth]);\n  const login = useCallback(async (username, password) => {\n    try {\n      await userRepository.login(username, password);\n      checkAuth();\n      navigate(\"/\", {\n        replace: true\n      });\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  }, [navigate, checkAuth]);\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"jwtToken\");\n    checkAuth();\n    navigate(\"/user/login\", {\n      replace: true\n    });\n  }, [navigate, checkAuth]);\n  return {\n    loggedInUser,\n    login,\n    logout\n  };\n};\n_s(useUsers, \"LfhrnZnbk/0z3Yl9q0gGi4bh2DY=\", false, function () {\n  return [useNavigate];\n});\nexport default useUsers;","map":{"version":3,"names":["useCallback","useEffect","useState","userRepository","useNavigate","useUsers","_s","loggedInUser","setLoggedInUser","navigate","checkAuth","token","localStorage","getItem","user","JSON","parse","atob","split","handleStorageChange","event","key","window","addEventListener","removeEventListener","login","username","password","replace","error","console","logout","removeItem"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/hooks/useUsers.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport userRepository from \"../repository/userRepository\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useUsers = () => {\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const navigate = useNavigate();\n\n    const checkAuth = useCallback(() => {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (!token) {\n            setLoggedInUser(null);\n            return;\n        }\n        try {\n            const user = JSON.parse(atob(token.split(\".\")[1]));\n            setLoggedInUser(user);\n        } catch {\n            // Invalid token format\n            setLoggedInUser(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        checkAuth();\n\n        const handleStorageChange = (event) => {\n            if (event.key === \"jwtToken\") {\n                checkAuth();\n            }\n        };\n\n        window.addEventListener(\"storage\", handleStorageChange);\n        return () => window.removeEventListener(\"storage\", handleStorageChange);\n    }, [checkAuth]);\n\n    const login = useCallback(async (username, password) => {\n        try {\n            await userRepository.login(username, password);\n            checkAuth();\n            navigate(\"/\", { replace: true });\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n        }\n    }, [navigate, checkAuth]);\n\n    const logout = useCallback(() => {\n        localStorage.removeItem(\"jwtToken\");\n        checkAuth();\n        navigate(\"/user/login\", { replace: true });\n    }, [navigate, checkAuth]);\n\n    return { loggedInUser, login, logout };\n};\n\nexport default useUsers;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMO,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,SAAS,GAAGV,WAAW,CAAC,MAAM;IAChC,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAI,CAACF,KAAK,EAAE;MACRH,eAAe,CAAC,IAAI,CAAC;MACrB;IACJ;IACA,IAAI;MACA,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClDV,eAAe,CAACM,IAAI,CAAC;IACzB,CAAC,CAAC,MAAM;MACJ;MACAN,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACZS,SAAS,CAAC,CAAC;IAEX,MAAMS,mBAAmB,GAAIC,KAAK,IAAK;MACnC,IAAIA,KAAK,CAACC,GAAG,KAAK,UAAU,EAAE;QAC1BX,SAAS,CAAC,CAAC;MACf;IACJ,CAAC;IAEDY,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IACvD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;EAC3E,CAAC,EAAE,CAACT,SAAS,CAAC,CAAC;EAEf,MAAMe,KAAK,GAAGzB,WAAW,CAAC,OAAO0B,QAAQ,EAAEC,QAAQ,KAAK;IACpD,IAAI;MACA,MAAMxB,cAAc,CAACsB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MAC9CjB,SAAS,CAAC,CAAC;MACXD,QAAQ,CAAC,GAAG,EAAE;QAAEmB,OAAO,EAAE;MAAK,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC;EACJ,CAAC,EAAE,CAACpB,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAEzB,MAAMqB,MAAM,GAAG/B,WAAW,CAAC,MAAM;IAC7BY,YAAY,CAACoB,UAAU,CAAC,UAAU,CAAC;IACnCtB,SAAS,CAAC,CAAC;IACXD,QAAQ,CAAC,aAAa,EAAE;MAAEmB,OAAO,EAAE;IAAK,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACnB,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAEzB,OAAO;IAAEH,YAAY;IAAEkB,KAAK;IAAEM;EAAO,CAAC;AAC1C,CAAC;AAACzB,EAAA,CAjDID,QAAQ;EAAA,QAEOD,WAAW;AAAA;AAiDhC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}