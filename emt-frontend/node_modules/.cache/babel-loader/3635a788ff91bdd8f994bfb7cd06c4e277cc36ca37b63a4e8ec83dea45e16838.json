{"ast":null,"code":"var _jsxFileName = \"/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useState, useEffect, useCallback, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport userRepository from \"../repository/userRepository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const navigate = useNavigate();\n  const checkAuth = useCallback(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (!token) {\n      setLoggedInUser(null);\n      return;\n    }\n    try {\n      const user = JSON.parse(atob(token.split(\".\")[1]));\n      setLoggedInUser(user);\n    } catch {\n      setLoggedInUser(null);\n    }\n  }, []);\n  useEffect(() => {\n    checkAuth();\n    const handleStorageChange = event => {\n      if (event.key === \"jwtToken\") {\n        checkAuth();\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, [checkAuth]);\n  const login = useCallback(async (username, password) => {\n    try {\n      await userRepository.login(username, password);\n      await checkAuth();\n      if (loggedInUser == null) navigate(\"/user/login\", {\n        state: {\n          errorMessage: \"Invalid username or password\"\n        },\n        replace: true\n      });else navigate(\"/\", {\n        replace: true\n      });\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  }, [navigate, checkAuth, loggedInUser]);\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"jwtToken\");\n    checkAuth();\n    navigate(\"/user/login\", {\n      replace: true\n    });\n  }, [navigate, checkAuth]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedInUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"LfhrnZnbk/0z3Yl9q0gGi4bh2DY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useContext","useNavigate","userRepository","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","loggedInUser","setLoggedInUser","navigate","checkAuth","token","localStorage","getItem","user","JSON","parse","atob","split","handleStorageChange","event","key","window","addEventListener","removeEventListener","login","username","password","state","errorMessage","replace","error","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, { createContext, useState, useEffect, useCallback, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport userRepository from \"../repository/userRepository\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const navigate = useNavigate();\n\n    const checkAuth = useCallback(() => {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (!token) {\n            setLoggedInUser(null);\n            return;\n        }\n        try {\n            const user = JSON.parse(atob(token.split(\".\")[1]));\n            setLoggedInUser(user);\n        } catch {\n            setLoggedInUser(null);\n        }\n    }, []);\n\n    useEffect(() => {\n        checkAuth();\n\n        const handleStorageChange = (event) => {\n            if (event.key === \"jwtToken\") {\n                checkAuth();\n            }\n        };\n\n        window.addEventListener(\"storage\", handleStorageChange);\n        return () => window.removeEventListener(\"storage\", handleStorageChange);\n    }, [checkAuth]);\n\n    const login = useCallback(async (username, password) => {\n        try {\n            await userRepository.login(username, password);\n            await checkAuth();\n            if(loggedInUser == null)\n                navigate(\"/user/login\", {\n                    state: { errorMessage: \"Invalid username or password\" },\n                    replace: true\n                });\n            else\n                navigate(\"/\", { replace: true });\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n        }\n    }, [navigate, checkAuth, loggedInUser]);\n\n    const logout = useCallback(() => {\n        localStorage.removeItem(\"jwtToken\");\n        checkAuth();\n        navigate(\"/user/login\", { replace: true });\n    }, [navigate, checkAuth]);\n\n    return (\n        <AuthContext.Provider value={{ loggedInUser, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}