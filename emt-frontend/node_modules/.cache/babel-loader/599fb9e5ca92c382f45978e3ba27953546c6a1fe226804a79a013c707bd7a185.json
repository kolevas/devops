{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport userRepository from \"../repository/userRepository\";\nimport { useNavigate } from \"react-router-dom\";\nconst useUsers = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loginState, setLoginState] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      const user = JSON.parse(atob(token.split(\".\")[1]));\n      setLoggedInUser(user);\n      setLoginState(true);\n    } else setLoginState(false);\n  }, []);\n  const login = useCallback((username, password) => {\n    userRepository.login(username, password).then(() => {\n      const token = localStorage.getItem(\"jwtToken\");\n      if (token) {\n        const user = JSON.parse(atob(token.split(\".\")[1]));\n        setLoggedInUser(user);\n        setLoginState(true);\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }).catch(error => console.log(error));\n  }, []);\n\n  // const login = async (username, password) => {\n  //     await userRepository.login(username, password);\n  //     const token = localStorage.getItem(\"jwtToken\");\n  //     if (token) {\n  //         const user = JSON.parse(atob(token.split(\".\")[1]));\n  //         setLoggedInUser(user);\n  //     }\n  // };\n\n  const logout = () => {\n    userRepository.logout();\n    setLoggedInUser(null);\n    setLoginState(false);\n  };\n\n  // const isAuthenticated = () => !!localStorage.getItem(\"jwtToken\");\n\n  return {\n    loggedInUser,\n    login,\n    logout,\n    setLoginState,\n    loginState\n    // isAuthenticated,\n  };\n};\n_s(useUsers, \"dSzj40Tp6BtcVVK6wxjamgDhajk=\", false, function () {\n  return [useNavigate];\n});\nexport default useUsers;","map":{"version":3,"names":["useCallback","useEffect","useState","userRepository","useNavigate","useUsers","_s","loggedInUser","setLoggedInUser","loginState","setLoginState","navigate","token","localStorage","getItem","user","JSON","parse","atob","split","login","username","password","then","replace","catch","error","console","log","logout"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/hooks/useUsers.js"],"sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport userRepository from \"../repository/userRepository\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst useUsers = () => {\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [loginState, setLoginState] = useState(false)\n    const navigate = useNavigate()\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n            const user = JSON.parse(atob(token.split(\".\")[1]));\n            setLoggedInUser(user);\n            setLoginState(true)\n\n        }\n        else setLoginState(false)\n    }, []);\n\n    const login = useCallback((username, password)=>{\n        userRepository\n            .login(username, password)\n            .then(()=> {\n                const token = localStorage.getItem(\"jwtToken\");\n                if (token) {\n                    const user = JSON.parse(atob(token.split(\".\")[1]));\n                    setLoggedInUser(user);\n                    setLoginState(true)\n                    navigate(\"/\", { replace: true });\n                }\n            })\n            .catch((error) => console.log(error));\n    }, [])\n\n    // const login = async (username, password) => {\n    //     await userRepository.login(username, password);\n    //     const token = localStorage.getItem(\"jwtToken\");\n    //     if (token) {\n    //         const user = JSON.parse(atob(token.split(\".\")[1]));\n    //         setLoggedInUser(user);\n    //     }\n    // };\n\n    const logout = () => {\n        userRepository.logout();\n        setLoggedInUser(null);\n        setLoginState(false)\n    };\n\n    // const isAuthenticated = () => !!localStorage.getItem(\"jwtToken\");\n\n\n    return {\n        loggedInUser,\n        login,\n        logout,\n        setLoginState, loginState\n        // isAuthenticated,\n    };\n};\n\nexport default useUsers;\n"],"mappings":";AAAA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACtD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9BH,SAAS,CAAC,MAAM;IACZ,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,EAAE;MACP,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClDX,eAAe,CAACO,IAAI,CAAC;MACrBL,aAAa,CAAC,IAAI,CAAC;IAEvB,CAAC,MACIA,aAAa,CAAC,KAAK,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAGpB,WAAW,CAAC,CAACqB,QAAQ,EAAEC,QAAQ,KAAG;IAC5CnB,cAAc,CACTiB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC,CACzBC,IAAI,CAAC,MAAK;MACP,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC9C,IAAIF,KAAK,EAAE;QACP,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClDX,eAAe,CAACO,IAAI,CAAC;QACrBL,aAAa,CAAC,IAAI,CAAC;QACnBC,QAAQ,CAAC,GAAG,EAAE;UAAEa,OAAO,EAAE;QAAK,CAAC,CAAC;MACpC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjB1B,cAAc,CAAC0B,MAAM,CAAC,CAAC;IACvBrB,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;;EAED;;EAGA,OAAO;IACHH,YAAY;IACZa,KAAK;IACLS,MAAM;IACNnB,aAAa;IAAED;IACf;EACJ,CAAC;AACL,CAAC;AAACH,EAAA,CAvDID,QAAQ;EAAA,QAGOD,WAAW;AAAA;AAsDhC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}