{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport countriesRepository from \"../repository/countriesRepository\";\nconst initialState = {\n  \"countries\": [],\n  \"loading\": true\n};\nconst useCountries = () => {\n  _s();\n  const [state, setState] = useState(initialState);\n  const fetchCountries = useCallback(() => {\n    countriesRepository.findAll().then(response => {\n      setState({\n        \"countries\": response.data,\n        \"loading\": false\n      });\n    }).catch(error => console.log(error));\n  }, []);\n  const onDelete = useCallback(id => {\n    countriesRepository.delete(id).then(() => {\n      console.log(`Successfully deleted the book with ID ${id}.`);\n      fetchCountries();\n    }).catch(error => console.log(error));\n  }, [fetchCountries]);\n  useEffect(() => {\n    fetchCountries();\n  }, [fetchCountries]);\n\n  // return {...state, onAdd: onAdd, onEdit: onEdit, onDelete: onDelete}\n  return {\n    ...state,\n    onDelete: onDelete\n  };\n};\n_s(useCountries, \"4OjtJshYJMYxYD9NG70k+chMMQA=\");\nexport default useCountries;","map":{"version":3,"names":["useCallback","useEffect","useState","countriesRepository","initialState","useCountries","_s","state","setState","fetchCountries","findAll","then","response","data","catch","error","console","log","onDelete","id","delete"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/hooks/useCountries.js"],"sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport countriesRepository from \"../repository/countriesRepository\";\n\nconst initialState = {\n    \"countries\": [],\n    \"loading\": true,\n};\n\nconst useCountries = () => {\n    const [state, setState] = useState(initialState);\n\n    const fetchCountries = useCallback(() => {\n        countriesRepository\n            .findAll()\n            .then((response) => {\n                setState({\n                    \"countries\": response.data,\n                    \"loading\": false,\n                });\n            })\n            .catch((error) => console.log(error));\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        countriesRepository\n            .delete(id)\n            .then(() => {\n                console.log(`Successfully deleted the book with ID ${id}.`);\n                fetchCountries();\n            })\n            .catch((error) => console.log(error));\n    }, [fetchCountries]);\n\n    useEffect(() => {\n        fetchCountries();\n    }, [fetchCountries]);\n\n    // return {...state, onAdd: onAdd, onEdit: onEdit, onDelete: onDelete}\n    return {...state, onDelete: onDelete}\n};\n\nexport default useCountries"],"mappings":";AAAA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACtD,OAAOC,mBAAmB,MAAM,mCAAmC;AAEnE,MAAMC,YAAY,GAAG;EACjB,WAAW,EAAE,EAAE;EACf,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACE,YAAY,CAAC;EAEhD,MAAMK,cAAc,GAAGT,WAAW,CAAC,MAAM;IACrCG,mBAAmB,CACdO,OAAO,CAAC,CAAC,CACTC,IAAI,CAAEC,QAAQ,IAAK;MAChBJ,QAAQ,CAAC;QACL,WAAW,EAAEI,QAAQ,CAACC,IAAI;QAC1B,SAAS,EAAE;MACf,CAAC,CAAC;IACN,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,QAAQ,GAAGlB,WAAW,CAAEmB,EAAE,IAAK;IACjChB,mBAAmB,CACdiB,MAAM,CAACD,EAAE,CAAC,CACVR,IAAI,CAAC,MAAM;MACRK,OAAO,CAACC,GAAG,CAAC,yCAAyCE,EAAE,GAAG,CAAC;MAC3DV,cAAc,CAAC,CAAC;IACpB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpBR,SAAS,CAAC,MAAM;IACZQ,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;;EAEpB;EACA,OAAO;IAAC,GAAGF,KAAK;IAAEW,QAAQ,EAAEA;EAAQ,CAAC;AACzC,CAAC;AAACZ,EAAA,CA/BID,YAAY;AAiClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}