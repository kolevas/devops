{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport userRepository from \"../repository/userRepository\";\nconst useUsers = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      const user = JSON.parse(atob(token.split(\".\")[1])); // Assuming JWT has user info in payload\n      setLoggedInUser(user);\n    }\n  }, []);\n  const login = async (username, password) => {\n    await userRepository.login(username, password);\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      const user = JSON.parse(atob(token.split(\".\")[1]));\n      setLoggedInUser(user);\n    }\n  };\n  const logout = () => {\n    userRepository.logout();\n    setLoggedInUser(null);\n  };\n  return {\n    loggedInUser,\n    login,\n    logout\n  };\n};\n_s(useUsers, \"smsud7DhBbRfSVdOSB0H0X69B4I=\");\nexport default useUsers;","map":{"version":3,"names":["useEffect","useState","userRepository","useUsers","_s","loggedInUser","setLoggedInUser","token","localStorage","getItem","user","JSON","parse","atob","split","login","username","password","logout"],"sources":["/Users/snezhanakoleva/IdeaProjects/EMT/emt-frontend/src/hooks/useUsers.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport userRepository from \"../repository/userRepository\";\n\nconst useUsers = () => {\n    const [loggedInUser, setLoggedInUser] = useState(null);\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n            const user = JSON.parse(atob(token.split(\".\")[1])); // Assuming JWT has user info in payload\n            setLoggedInUser(user);\n        }\n    }, []);\n\n    const login = async (username, password) => {\n        await userRepository.login(username, password);\n        const token = localStorage.getItem(\"jwtToken\");\n        if (token) {\n            const user = JSON.parse(atob(token.split(\".\")[1]));\n            setLoggedInUser(user);\n        }\n    };\n\n    const logout = () => {\n        userRepository.logout();\n        setLoggedInUser(null);\n    };\n\n    return {\n        loggedInUser,\n        login,\n        logout,\n    };\n};\n\nexport default useUsers;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,8BAA8B;AAEzD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,EAAE;MACP,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpDR,eAAe,CAACI,IAAI,CAAC;IACzB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxC,MAAMf,cAAc,CAACa,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;IAC9C,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,EAAE;MACP,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClDR,eAAe,CAACI,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACjBhB,cAAc,CAACgB,MAAM,CAAC,CAAC;IACvBZ,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,OAAO;IACHD,YAAY;IACZU,KAAK;IACLG;EACJ,CAAC;AACL,CAAC;AAACd,EAAA,CA9BID,QAAQ;AAgCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}